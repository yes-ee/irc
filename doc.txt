<message>  ::= [':' <prefix> <SPACE> ] <command> <params> <crlf>
<prefix>   ::= <servername> | <nick> [ '!' <user> ] [ '@' <host> ]
<command>  ::= <letter> { <letter> } | <number> <number> <number>
<SPACE>    ::= ' ' { ' ' }
<params>   ::= <SPACE> [ ':' <trailing> | <middle> <params> ]

<middle>   ::= <Any *non-empty* sequence of octets not including SPACE
               or NUL or CR or LF, the first of which may not be ':'>
<trailing> ::= <Any, possibly *empty*, sequence of octets not including
                 NUL or CR or LF>

<crlf>     ::= CR LF  /r/n

유저 닉네임은 최대 9글자만 가능함

구현해야하는 명령
KICK - 채널에서 유저를 방출
INVITE - 채널로 유저 초대
TOPIC = 채널 토픽? 을 바꾸거나 확인
MODE - 채널 모드를 바꿈
i - 초대만 가능한 채널로 설정
t - 채널 오퍼레이터만 TOPIC을 설정할 수 있음
k - 채널 패스워드를 설정함
o - 채널 오퍼레이터 권한을 줌
ㅣ - 채널 유저 수 제한


클라이언트로부터의 요청 프로토콜
PASS <password> 연결 비밀번호 설정

NICK <nickname> 닉네임 부여 혹은 변경
	동일한 닉네임을 수신하는 경우 ERR_NICKCOLLISON 발생

USER <username> <hostname> <servername> <realname>
사용자 이름 호스트이름 서버이름 및 실명 지정
호스트 이름과 서버이름 무시
username과 realname만 받는데 realname은 무시하자

OPER <user> <password>
일반 사용자가 운영자 권한을 얻기 위해 사용
서버는 클라이언트 닉네임에 MODE -o 적용
에러시 ERR_NEEDMOREPARAMS 파라미터 오류
RPL_YOUROPER 패스워드 틀림

QUIT [<quit message>]
클라이언트가 연결 끊을때 사용

SQUIT
서버가 죽으면 보내는 메세지
JOIN <channel>{,<channel?} [<key>{,<key>}]
채널에 사용자 추가
PART
채널 떠남

PART 명령은 지정된 채널에서 클라이언트를 제거합니다. PART 명령이 성공적으로 전송되면 사용자는 제거된 각 채널에 대해 서버로부터 PART 메시지를 받게 됩니다. <이유>는 클라이언트가 채널을 떠난 이유입니다.

이 명령의 매개 변수에 있는 각 채널에 대해 채널이 존재하고 클라이언트가 해당 채널에 가입되어 있지 않으면 ERR_NOTONCHANNEL(442) 응답을 수신하고 해당 채널은 무시됩니다. 채널이 존재하지 않는 경우 클라이언트는 ERR_NOSUCHCHANNEL(403) 응답을 수신하고 해당 채널은 무시됩니다.

이 메시지는 채널에서 누군가가 제거되었음을 클라이언트에게 알리기 위해 서버에서 클라이언트로 전송될 수 있습니다. 이 경우 메시지 <소스>는 제거되는 클라이언트가 되고 <채널>은 해당 클라이언트가 제거된 채널이 됩니다. 서버는 이 메시지에서 여러 채널을 클라이언트에 보내서는 안 되며, 이러한 다중 채널 PART 메시지를 각각에 단일 채널 이름을 가진 일련의 메시지로 배포해야 합니다. 이러한 방식으로 PART 메시지를 배포하는 경우 <이유>(있는 경우)가 각 메시지에 포함되어야 합니다.

Translated with www.DeepL.com/Translator (free version)